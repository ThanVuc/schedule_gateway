// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: auth_service/role.proto

package auth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "schedule_gateway/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request and response messages for the Login RPC
type GetRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRolesRequest) Reset() {
	*x = GetRolesRequest{}
	mi := &file_auth_service_role_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRequest) ProtoMessage() {}

func (x *GetRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesRequest.ProtoReflect.Descriptor instead.
func (*GetRolesRequest) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{0}
}

func (x *GetRolesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []string               `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRolesResponse) Reset() {
	*x = GetRolesResponse{}
	mi := &file_auth_service_role_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResponse) ProtoMessage() {}

func (x *GetRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesResponse.ProtoReflect.Descriptor instead.
func (*GetRolesResponse) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{1}
}

func (x *GetRolesResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpsertRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRoleRequest) Reset() {
	*x = UpsertRoleRequest{}
	mi := &file_auth_service_role_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRoleRequest) ProtoMessage() {}

func (x *UpsertRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRoleRequest.ProtoReflect.Descriptor instead.
func (*UpsertRoleRequest) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UpsertRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertRoleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpsertRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	RoleId        string                 `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	Error         *common.Error          `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRoleResponse) Reset() {
	*x = UpsertRoleResponse{}
	mi := &file_auth_service_role_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRoleResponse) ProtoMessage() {}

func (x *UpsertRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRoleResponse.ProtoReflect.Descriptor instead.
func (*UpsertRoleResponse) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpsertRoleResponse) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UpsertRoleResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	mi := &file_auth_service_role_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type DeleteRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	mi := &file_auth_service_role_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DisableOrEnableRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	Disable       bool                   `protobuf:"varint,2,opt,name=disable,proto3" json:"disable"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableOrEnableRoleRequest) Reset() {
	*x = DisableOrEnableRoleRequest{}
	mi := &file_auth_service_role_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableOrEnableRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableOrEnableRoleRequest) ProtoMessage() {}

func (x *DisableOrEnableRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableOrEnableRoleRequest.ProtoReflect.Descriptor instead.
func (*DisableOrEnableRoleRequest) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{6}
}

func (x *DisableOrEnableRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *DisableOrEnableRoleRequest) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

type DisableOrEnableRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableOrEnableRoleResponse) Reset() {
	*x = DisableOrEnableRoleResponse{}
	mi := &file_auth_service_role_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableOrEnableRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableOrEnableRoleResponse) ProtoMessage() {}

func (x *DisableOrEnableRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableOrEnableRoleResponse.ProtoReflect.Descriptor instead.
func (*DisableOrEnableRoleResponse) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{7}
}

func (x *DisableOrEnableRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AssignPermissionToRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PermissionId  string                 `protobuf:"bytes,1,opt,name=permission_id,json=permissionId,proto3" json:"permission_id"`
	RoleId        string                 `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignPermissionToRoleRequest) Reset() {
	*x = AssignPermissionToRoleRequest{}
	mi := &file_auth_service_role_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignPermissionToRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPermissionToRoleRequest) ProtoMessage() {}

func (x *AssignPermissionToRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPermissionToRoleRequest.ProtoReflect.Descriptor instead.
func (*AssignPermissionToRoleRequest) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{8}
}

func (x *AssignPermissionToRoleRequest) GetPermissionId() string {
	if x != nil {
		return x.PermissionId
	}
	return ""
}

func (x *AssignPermissionToRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type AssignPermissionToRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignPermissionToRoleResponse) Reset() {
	*x = AssignPermissionToRoleResponse{}
	mi := &file_auth_service_role_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignPermissionToRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPermissionToRoleResponse) ProtoMessage() {}

func (x *AssignPermissionToRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_service_role_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPermissionToRoleResponse.ProtoReflect.Descriptor instead.
func (*AssignPermissionToRoleResponse) Descriptor() ([]byte, []int) {
	return file_auth_service_role_proto_rawDescGZIP(), []int{9}
}

func (x *AssignPermissionToRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_auth_service_role_proto protoreflect.FileDescriptor

const file_auth_service_role_proto_rawDesc = "" +
	"\n" +
	"\x17auth_service/role.proto\x12\x04auth\x1a\x12common/error.proto\"*\n" +
	"\x0fGetRolesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"(\n" +
	"\x10GetRolesResponse\x12\x14\n" +
	"\x05roles\x18\x01 \x03(\tR\x05roles\"b\n" +
	"\x11UpsertRoleRequest\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"l\n" +
	"\x12UpsertRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\arole_id\x18\x02 \x01(\tR\x06roleId\x12#\n" +
	"\x05error\x18\x03 \x01(\v2\r.common.ErrorR\x05error\",\n" +
	"\x11DeleteRoleRequest\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\".\n" +
	"\x12DeleteRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"O\n" +
	"\x1aDisableOrEnableRoleRequest\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\x12\x18\n" +
	"\adisable\x18\x02 \x01(\bR\adisable\"7\n" +
	"\x1bDisableOrEnableRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"]\n" +
	"\x1dAssignPermissionToRoleRequest\x12#\n" +
	"\rpermission_id\x18\x01 \x01(\tR\fpermissionId\x12\x17\n" +
	"\arole_id\x18\x02 \x01(\tR\x06roleId\":\n" +
	"\x1eAssignPermissionToRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x8b\x03\n" +
	"\vRoleService\x129\n" +
	"\bGetRoles\x12\x15.auth.GetRolesRequest\x1a\x16.auth.GetRolesResponse\x12?\n" +
	"\n" +
	"UpsertRole\x12\x17.auth.UpsertRoleRequest\x1a\x18.auth.UpsertRoleResponse\x12?\n" +
	"\n" +
	"DeleteRole\x12\x17.auth.DeleteRoleRequest\x1a\x18.auth.DeleteRoleResponse\x12Z\n" +
	"\x13DisableOrEnableRole\x12 .auth.DisableOrEnableRoleRequest\x1a!.auth.DisableOrEnableRoleResponse\x12c\n" +
	"\x16AssignPermissionToRole\x12#.auth.AssignPermissionToRoleRequest\x1a$.auth.AssignPermissionToRoleResponseB\fZ\n" +
	"proto/authb\x06proto3"

var (
	file_auth_service_role_proto_rawDescOnce sync.Once
	file_auth_service_role_proto_rawDescData []byte
)

func file_auth_service_role_proto_rawDescGZIP() []byte {
	file_auth_service_role_proto_rawDescOnce.Do(func() {
		file_auth_service_role_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auth_service_role_proto_rawDesc), len(file_auth_service_role_proto_rawDesc)))
	})
	return file_auth_service_role_proto_rawDescData
}

var file_auth_service_role_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_auth_service_role_proto_goTypes = []any{
	(*GetRolesRequest)(nil),                // 0: auth.GetRolesRequest
	(*GetRolesResponse)(nil),               // 1: auth.GetRolesResponse
	(*UpsertRoleRequest)(nil),              // 2: auth.UpsertRoleRequest
	(*UpsertRoleResponse)(nil),             // 3: auth.UpsertRoleResponse
	(*DeleteRoleRequest)(nil),              // 4: auth.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),             // 5: auth.DeleteRoleResponse
	(*DisableOrEnableRoleRequest)(nil),     // 6: auth.DisableOrEnableRoleRequest
	(*DisableOrEnableRoleResponse)(nil),    // 7: auth.DisableOrEnableRoleResponse
	(*AssignPermissionToRoleRequest)(nil),  // 8: auth.AssignPermissionToRoleRequest
	(*AssignPermissionToRoleResponse)(nil), // 9: auth.AssignPermissionToRoleResponse
	(*common.Error)(nil),                   // 10: common.Error
}
var file_auth_service_role_proto_depIdxs = []int32{
	10, // 0: auth.UpsertRoleResponse.error:type_name -> common.Error
	0,  // 1: auth.RoleService.GetRoles:input_type -> auth.GetRolesRequest
	2,  // 2: auth.RoleService.UpsertRole:input_type -> auth.UpsertRoleRequest
	4,  // 3: auth.RoleService.DeleteRole:input_type -> auth.DeleteRoleRequest
	6,  // 4: auth.RoleService.DisableOrEnableRole:input_type -> auth.DisableOrEnableRoleRequest
	8,  // 5: auth.RoleService.AssignPermissionToRole:input_type -> auth.AssignPermissionToRoleRequest
	1,  // 6: auth.RoleService.GetRoles:output_type -> auth.GetRolesResponse
	3,  // 7: auth.RoleService.UpsertRole:output_type -> auth.UpsertRoleResponse
	5,  // 8: auth.RoleService.DeleteRole:output_type -> auth.DeleteRoleResponse
	7,  // 9: auth.RoleService.DisableOrEnableRole:output_type -> auth.DisableOrEnableRoleResponse
	9,  // 10: auth.RoleService.AssignPermissionToRole:output_type -> auth.AssignPermissionToRoleResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_auth_service_role_proto_init() }
func file_auth_service_role_proto_init() {
	if File_auth_service_role_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auth_service_role_proto_rawDesc), len(file_auth_service_role_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_service_role_proto_goTypes,
		DependencyIndexes: file_auth_service_role_proto_depIdxs,
		MessageInfos:      file_auth_service_role_proto_msgTypes,
	}.Build()
	File_auth_service_role_proto = out.File
	file_auth_service_role_proto_goTypes = nil
	file_auth_service_role_proto_depIdxs = nil
}
